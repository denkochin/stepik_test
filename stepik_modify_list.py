'''
Напишите функцию modify_list(l), которая принимает на вход список целых чисел,
удаляет из него все нечётные значения, а чётные нацело делит на два.
Функция не должна ничего возвращать, требуется только изменение переданного списка, например:

lst = [1, 2, 3, 4, 5, 6]
print(modify_list(lst))  # None
print(lst)               # [1, 2, 3]
modify_list(lst)
print(lst)               # [1]

lst = [10, 5, 8, 3]
modify_list(lst)
print(lst)               # [5, 4]

'''

''' Правильное решение
def modify_list(l):
    l[:] = [i//2 for i in l if not i % 2]
    это обычный генератор списка с условием, можно в интернете почитать. если первое то тут
    логика такая, так как список l в памяти уже есть и его нужно перезаписать, то есть изменить
    сам объект списка, поэтому тут я делаю срез всего списка от начала до конца и меняю сам объект.
    если написать просто l = [i//2 for i in l if not i % 2] в данном случае будет создан новый объект,
    под него выделена память и переменная l будет уже ссылаться на него, а старая ссылка на
    исходный объект списка сотрется. т.е происходит не изменение объекта, а перенаправление
    ссылки у переменной l. я не проверял может и такой вариант сработает но подумал что он
    учтет занимаемую память и выдаст ошибку, так как была задача одна и там подобный подход
    выдавал ошибку, а сделал l[:] (изменил сам весь объект) все заработало
'''
